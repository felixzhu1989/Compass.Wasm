@inject IIssueService IssueService
@inject IUserService UserService

@foreach (var issue in MainPlanDto.IssueDtos)
{
    //虚线分割
    <hr size="1" style="border-top:1px deeppink dashed;">
    <CompUpdateIcon Roles="" Url="@($"issue/update/{issue.Id}")" />
    <span style="font-weight: bold;color:deeppink ">@issue.Title</span>
    @if (issue.IsClosed)
    {
        <span class="text-success">(已关闭)</span>
    }
    else
    {
        <span class="text-danger">(异常未关闭)</span>
    }
    <br />
    <span style="color: dodgerblue">上报：@(issue.Reporter?.UserName)</span>
    <br />
    <span style="color: dodgerblue">内容：</span>
    <br />
    <CompMultiLineText Text="@issue.Content" />
    <span style="color: dodgerblue">附件：</span>
    <br />
    <!--改成多张图片显示-->
    @*<img src="@issue.ContentUrl" alt="@Path.GetFileName(issue.ContentUrl)" />*@
    <CompMultiImgs ContentUrl="@issue.ContentUrl"/>
    <CompFiles Roles="admin,pm,mgr,dsr"
           FileUrls="@issue.ContentUrl"
           UpLoadUrl="@($"issue/update/{issue.Id}")" />
    <hr size="1" style="border-top:1px green dashed;">

    <CompUpdateIcon Roles="" Url="@($"issue/solution/{issue.Id}")" />
    <span style="font-weight: bold;color: green">解决方案</span>
    <br />
    <span>
        <span style="color: dodgerblue">跟进：</span>
        @if (issue.Responder == null)
        {
            //todo:指派负责人
            <AuthorizeView Roles="admin,pm,mgr">
                <Authorized>
                    <a href="issue/solution/@issue.Id">指派负责人</a> 
                </Authorized>
            </AuthorizeView>
        }
        else
        {
            @(issue.Responder?.UserName)
        }
    </span>
    <br />
    <span style="color: dodgerblue">期限：@(issue.Deadline?.ToString("yyyy-MM-dd"))</span>
    <br />
    <span style="color: dodgerblue">措施：</span>
    <br />
    <CompMultiLineText Text="@issue.Solution" />
    <span style="color: dodgerblue">附件：</span>
    <br />
    <CompMultiImgs ContentUrl="@issue.SolutionUrl" />
    <CompFiles Roles="admin,pm,mgr,dsr"
           FileUrls="@issue.SolutionUrl"
           UpLoadUrl="@($"issue/solution/{issue.Id}")" />

}

@code {
    [Parameter]
    public MainPlanDto? MainPlanDto { get; set; }
    protected override async Task OnInitializedAsync()
    {
        if (MainPlanDto.Id != null)
        {
            var iResult = await IssueService.GetAllByMainPlanIdAsync(MainPlanDto.Id.Value);
            if (iResult.Status) MainPlanDto.IssueDtos = iResult.Result;
        }
    }
}

@page "/cycletime/{Year:int}"
@using Compass.Wasm.Shared.Plans
@inject HttpClient Http
<PageTitle>Cycle Time</PageTitle>
<span>@Year 年 Cycle Time (不包含KFC)</span>
<div class="row">


    <table class="col table table-hover" style="table-layout: fixed;word-break:break-all; max-width: 450px">
        <thead>
            <tr>
                <th style="text-align: center">Month</th>
                <th style="text-align: center">Project Qty</th>
                <th style="text-align: center">Factory</th>
                <th style="text-align: center">Production</th>
            </tr>
        </thead>
        <tbody>
            @if (_cycleTimes.Count == 0)
            {
                <p>加载中...</p>
            }
            else
            {
                @foreach (var ct in _cycleTimes)
                {
                    <tr>
                        <td style="text-align: center">@ct.Month</td>
                        <td style="text-align: center">@ct.ProjectQuantity</td>
                        <td style="text-align: center">@ct.FactoryCycleTime</td>
                        <td style="text-align: center">@ct.ProductionCycleTime</td>
                    </tr>
                }
            }
            <tr style="font-weight: bold">
                <td style="text-align: center">Summary</td>
                <td style="text-align: center">@_annualCycleTime.ProjectQuantity</td>
                <td style="text-align: center">@_annualCycleTime.FactoryCycleTime</td>
                <td style="text-align: center">@_annualCycleTime.ProductionCycleTime</td>
            </tr>
        </tbody>
    </table>
</div>

@code {
    [Parameter]
    public int Year { get; set; }

    private List<CycleTimeDto?>? _cycleTimes = new();
    private CycleTimeDto? _annualCycleTime = new();
    protected override async Task OnParametersSetAsync()
    {
        for (int i = 0; i < 12; i++)
        {
            var result = await Http.GetFromJsonAsync<CycleTimeDto>($"api/ProductionPlan/CycleTime/{Year}/{i + 1}");
            result.Month = i + 1;
            _cycleTimes.Add(result);
        }
        _annualCycleTime=await Http.GetFromJsonAsync<CycleTimeDto>($"api/ProductionPlan/CycleTime/{Year}");
    }
}

@page "/bindproject/{Id}"
@using Compass.Wasm.Shared.Plans
@using Compass.Wasm.Shared.Projects
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
<PageTitle>Bind Project</PageTitle>
<span>@_prodPlan.SqNumber-@_prodPlan.Name</span>
<EditForm Model="_prodPlan" OnSubmit="Save">
    @if (_projects != null && _projects.Count!=0)
    {
        <div class="input-group mb-2">
            <span class="input-group-text">选择项目</span>
            <select class="form-select" @bind="@_selectedProjectId">
                @foreach (var project in _projects)
                {
                    <option value="@project.Id">
                        @project.OdpNumber-@project.Name
                    </option>
                }
            </select>
        </div>
        <button class="btn btn-success me-2" type="submit">绑定计划</button>
    }
    else
    {
        <span>没有未绑定的项目</span>
    }
    
    <button class="btn btn-secondary" type="button" @onclick="@(() => NavigationManager.NavigateTo("productionplanlist"))">取消</button>
</EditForm>

@code {
    [Parameter]
    public string Id { get; set; }
    private ProductionPlanResponse? _prodPlan = new();
    private List<ProjectDto>? _projects = new();
    private string _selectedProjectId = string.Empty;
    protected override async Task OnInitializedAsync()
    {
        _prodPlan = await Http.GetFromJsonAsync<ProductionPlanResponse>($"api/ProductionPlan/{Id}");
        _projects = await Http.GetFromJsonAsync<List<ProjectDto>>("api/ProductionPlan/UnbindProjects");
    }
    public async Task Save()
    {
        if (string.IsNullOrEmpty(_selectedProjectId))
        {
            await JsRuntime.InvokeVoidAsync("alert", "请选择项目");
            return;
        }
        _prodPlan.ProjectId =Guid.Parse(_selectedProjectId);
        var result = await Http.PutAsJsonAsync("api/ProductionPlan/BindProject", _prodPlan);
        if (result.IsSuccessStatusCode) NavigationManager.NavigateTo("productionplanlist");
    }
}

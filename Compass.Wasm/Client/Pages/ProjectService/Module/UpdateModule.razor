@page "/updatemodule/{Id}"

@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

<div class="row">
    <div class="col">
        <p>
            <span class="fs-5">更新分段信息</span>
        </p>
    </div>
    @*todo:控制权限*@
    <AuthorizeView Roles="admin,pm,designer">
        <Authorized>
            <div class="col" style="text-align: right">
                <button class="btn mb-2" type="button" @onclick="Delete"><i class="bi bi-trash3 text-danger" /></button>
            </div>
        </Authorized>
    </AuthorizeView>
</div>
@if (_module != null)
{
    <EditForm Model="_module" OnSubmit="Save">
        <CategoryChoose @bind-ModelTypeId="ModelTypeId" />
        <hr/>
        <div class="row">
            <div class="col input-group mb-2">
                <span class="input-group-text">分段编号</span>
                <input class="form-control" placeholder="M1,M2...B01,CJ01..." @bind-value="@_module.Name"/>
            </div>
            <div class="col input-group mb-2">
                <span class="input-group-text">①长度</span>
                <input class="form-control" type="number" placeholder="烟罩长度" @bind-value="@_module.Length" />
            </div>
            <div class="col input-group mb-2">
                <span class="input-group-text">②宽度</span>
                <input class="form-control" type="number" placeholder="烟罩宽度" @bind-value="@_module.Width" />
            </div>
            <div class="col input-group mb-2">
                <span class="input-group-text">③高度</span>
                <input class="form-control" type="number" placeholder="烟罩高度" @bind-value="@_module.Height" />
            </div>
            <div class="col"><span class="input-group-text">只填变化尺寸，标准尺寸不填</span></div>
        </div>
        <div class="input-group mb-2">
            <span class="input-group-text">特殊要求</span>
            <textarea class="form-control" placeholder="Special Notes，可输入多行" style="height: 120px" @bind="@_module.SpecialNotes"></textarea>
        </div>

        <button class="btn btn-success" type="submit">保存</button>
        <button class="btn btn-secondary" type="button" @onclick="@(() => NavigationManager.NavigateTo($"./modulelist/{_module.DrawingId}"))">取消</button>
    </EditForm>
}

@code {
    [Parameter]
    public string Id { get; set; }
    [Parameter]
    public string ModelTypeId { get; set; }

    private ModuleResponse? _module;

    protected override async Task OnInitializedAsync()
    {
        _module = await Http.GetFromJsonAsync<ModuleResponse>($"api/Module/{Id}");
        ModelTypeId = _module.ModelTypeId.ToString();
        _module.OldModelTypeId = _module.ModelTypeId;
    }
    private async Task Delete()
    {
        var confirmResult = await JsRuntime.InvokeAsync<bool>("confirm", $"确定要删除分段【{_module.Name}】吗？");
        if (confirmResult)
        {
            var result = await Http.DeleteAsync($"api/Module/{Id}");
            if (result.IsSuccessStatusCode) NavigationManager.NavigateTo($"./modulelist/{_module.DrawingId}");
        }
    }
    private async Task Save()
    {
        _module.ModelTypeId = Guid.Parse(ModelTypeId);
        var result = await Http.PutAsJsonAsync($"api/Module/{Id}", _module);
        if (result.IsSuccessStatusCode) NavigationManager.NavigateTo($"./modulelist/{_module.DrawingId}");
    }
}

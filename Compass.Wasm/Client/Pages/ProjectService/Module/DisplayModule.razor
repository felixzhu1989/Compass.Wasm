@inject HttpClient Http
@inject IJSRuntime JsRuntime
<p>
    <div class="row">
        <div class="col">
            <AuthorizeView Roles="admin,pm,designer">
                <Authorized>
                    <a href="./updatemodule/@Module.Id"><i class="bi bi-gear"/></a>
                </Authorized>
            </AuthorizeView>
            <span style="font-weight: bold">@Module.Name</span>
            @if (model != null)
            {
                <span>（@model.Name）</span>
            }
        </div>
        @if (ShowModuleRelease)
        {
            <div class="col">
                @*Todo:控制权限，谁的图纸谁负责下发，否则只能看状态，用disabled属性控制*@
                <AuthorizeView Roles="admin,pm,designer">
                    <Authorized>
                        @if (context.User.Identity!.Name!.Equals(userName))
                        {
                            <div class="form-check form-switch">
                                <input class="form-check-input" type="checkbox" value="@isReleased" @onchange="OnChecked" checked="@isReleased">
                                <label class="form-check-label">@(isReleased ? "已下发" : "未下发")</label>
                            </div>
                        }
                        else
                        {
                            <div class="form-check form-switch">
                                <input class="form-check-input" type="checkbox" checked="@isReleased" disabled="disabled">
                                <label class="form-check-label">@(isReleased ? "已下发" : "未下发")</label>
                            </div>
                        }
                    </Authorized>
                    <NotAuthorized>
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" checked="@isReleased" disabled="disabled">
                            <label class="form-check-label">@(isReleased ? "已下发" : "未下发")</label>
                        </div>
                    </NotAuthorized>
                </AuthorizeView>
            </div>
        }
    </div>

    @if (!string.IsNullOrWhiteSpace(Module.SpecialNotes))
    {
        foreach (var note in Module.SpecialNotes.Split('\n'))
        {
            <span style="color: blue">@note</span><br/>
        }
    }
</p>

@code {
    [Parameter]
    public ModuleResponse Module { get; set; }
    [Parameter]
    public bool ShowModuleRelease { get; set; }

    private ModelResponse? model;
    private string userName="";
    bool isReleased;
    protected override async Task OnInitializedAsync()
    {
        model = await Http.GetFromJsonAsync<ModelResponse>($"api/Model/{Module.ModelId}");
        isReleased = Module.IsReleased;
        userName = await Http.GetStringAsync($"api/Drawing/UserName/{Module.DrawingId}");
    }

    private async Task OnChecked(ChangeEventArgs args){
        isReleased=Convert.ToBoolean(args.Value);
        await Http.PutAsync($"api/Module/Release/{Module.Id}?isReleased={isReleased}", null);
        StateHasChanged();
    }


}

@inject HttpClient Http
@inject IJSRuntime JsRuntime
<tr>
    <td>
        <AuthorizeView>
            <Authorized>
                <a href="/updateissue/@Issue.Id">更新经验教训</a>
            </Authorized>
        </AuthorizeView>
        <div class="row">
            <div class="col-sm-3" style="width: 95px">登记时间:</div>
            <div class="col-sm-9">@Issue.CreationTime</div>
        </div>
        @if (reporter != null)
        {
            <div class="row">
                <div class="col-sm-3" style="width: 95px">登记人:</div>
                <div class="col-sm-9">@reporter.UserName</div>
            </div>
        }
        <div class="row">
            <div class="col-sm-3" style="width: 95px">项目状态:</div>
            <div class="col-sm-9">
                <span class="badge @(Issue.ProjectStatus==ProjectStatus.计划?"bg-info text-dark": Issue.ProjectStatus==ProjectStatus.制图?"bg-primary": Issue.ProjectStatus==ProjectStatus.生产?"bg-warning text-dark": Issue.ProjectStatus==ProjectStatus.入库?"bg-success": "bg-secondary")">@Issue.ProjectStatus</span>
                <span>(登记时)</span>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-3" style="width: 95px">相关方:</div>
            <div class="col-sm-9">@Issue.Stakeholder</div>
        </div>
        <div class="row">
            <div class="col-sm-3" style="width: 95px">经验教训:</div>
            <div class="col-sm-9" style="color: red">
                @foreach (var row in Issue.Description.Split('\n'))
                {
                    <span>@row</span>
                    <br />
                }
            </div>
        </div>
        @if (!string.IsNullOrWhiteSpace(Issue.DescriptionUrl))
        {
            <div class="row">
                <div class="col-sm-3" style="width: 95px">经验附件:</div>
                <div class="col-sm-9">
                    @foreach (var fileUrl in Issue.DescriptionUrl.Split('\n'))
                    {
                        <a href="@fileUrl" target="_blank">@(Path.GetFileName(fileUrl))</a>
                        <br />
                    }
                </div>
            </div>
        }
    </td>
</tr>

@code {
    [Parameter]
    public IssueResponse Issue { get; set; }
    private UserDto? reporter;

    protected override async Task OnParametersSetAsync()
    {
        reporter = await Http.GetFromJsonAsync<UserDto>($"api/UserAdmin/{Issue.ReportUserId}");
    }

}

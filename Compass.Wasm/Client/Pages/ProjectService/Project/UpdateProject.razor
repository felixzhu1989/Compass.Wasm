@page "/updateproject/{Id}"
@using Compass.Wasm.Shared.ProjectService

@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

<PageTitle>Update Project</PageTitle>

<div class="row">
    <div class="col">
        <p>
            <span class="fs-5">更新项目信息</span>
        </p>
    </div>
    @*todo:控制权限*@
    <div class="col" style="text-align: right">
        <button class="btn mb-2" type="button" @onclick="Delete"><i class="bi bi-trash3 text-danger" /></button>
    </div>
</div>

<EditForm Model="project" OnSubmit="Save">
    <!--由项目经理修改的数据-->
    <div class="input-group mb-2">
        <span class="input-group-text">项目编号</span>
        <input class="form-control" placeholder="ODP" @bind-value="@project.OdpNumber" />
    </div>
    <div class="input-group mb-2">
        <span class="input-group-text">项目名称</span>
        <input class="form-control" placeholder="Name" @bind-value="@project.Name" />
    </div>
    <div class="input-group mb-2">
        <span class="input-group-text" style="color: green">合同日期</span>
        <input type="date" class="form-control" style="color: green" @bind-value="@project.ReceiveDate" />
    </div>
    <div class="input-group mb-2">
        <span class="input-group-text" style="color: red">交货日期</span>
        <input type="date" class="form-control" style="color: red" @bind-value="@project.DeliveryDate" />
    </div>
    <div class="input-group mb-2">
        <span class="input-group-text">项目类型</span>
        <select class="form-select" @bind="@project.ProjectType">
            @foreach (var type in Enum.GetNames(typeof(ProjectType)))
            {
                <option>@type</option>
            }
        </select>
    </div>
    <div class="input-group mb-2">
        <span class="input-group-text">风险等级</span>
        <select class="form-select" @bind="@project.RiskLevel">
            @foreach (var level in Enum.GetNames(typeof(RiskLevel)))
            {
                <option>@level</option>
            }
        </select>
        @*Todo:风险值=概率*影响，概率影响矩阵*@
        <button class="btn btn-warning" type="button">风险评级</button>
    </div>

    <FileUpload Title="系统合同" FileType="application/pdf" @bind-FileUrl="@project.ContractUrl"/>

    <FileUpload Title="物料清单" FileType="application/pdf" @bind-FileUrl="@project.BomUrl"/>
    
    <MultiFileUpload Title="其他附件" @bind-MultiFileUrl="@project.AttachmentsUrl"></MultiFileUpload>

    <div class="input-group mb-2">
        <span class="input-group-text">特殊要求</span>
        <textarea class="form-control" placeholder="Special Notes，可输入多行" style="height: 120px" @bind="@project.SpecialNotes"></textarea>
    </div>
    <button class="btn btn-success" type="submit">保存</button>
    <button class="btn btn-secondary" type="button" @onclick="@(() => NavigationManager.NavigateTo("./projectlist"))">取消</button>

</EditForm>


@code {
    [Parameter]
    public string Id { get; set; }
    private ProjectResponse? project=new();
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var response = await Http.GetFromJsonAsync<ProjectResponse>($"api/Project/{Id}");
        if (response==null) NavigationManager.NavigateTo("./projectlist");
        project = response;
    }

    private async Task Delete()
    {
        //todo:检查项目下有没有图纸
        //if (await Repository.CheckDrawingsInProject(project.Id))
        //{
        //    await JsRuntime.InvokeVoidAsync("alert", "该项目下包含图纸，不能删除！");
        //    return;
        //}


        var confirmResult = await JsRuntime.InvokeAsync<bool>("confirm", $"确定要删除项目【{project.OdpNumber}】吗？");
        if (confirmResult)
        {
            var result = await Http.DeleteAsync($"api/Project/{Id}");
            if (result.IsSuccessStatusCode) NavigationManager.NavigateTo("./projectlist");
        }
    }
    private async Task Save()
    {
        var result = await Http.PutAsJsonAsync($"api/Project/{Id}", project);
        if (result.IsSuccessStatusCode) NavigationManager.NavigateTo("./projectlist");
    }
}

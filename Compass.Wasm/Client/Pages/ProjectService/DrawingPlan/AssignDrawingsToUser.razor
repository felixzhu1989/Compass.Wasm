@page "/assigndrawings/{Id}"

@using Microsoft.AspNetCore.Components
@using Compass.Wasm.Shared.ProjectService
@using Compass.Wasm.Shared.IdentityService
@using Compass.Wasm.Client.ProjectService
<PageTitle>Assign Drawings</PageTitle>

@inject HttpClient Http
@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager

<DisplayDrawingPlan Id="@Id" />
@if (isDrawingsNotAssigned && drawingsNotAssigned != null && drawingsNotAssigned.Length != 0)
{
    <EditForm Model="drawingsNotAssigned" OnSubmit="Save">

        @foreach (var drawing in drawingsNotAssigned)
        {
            <div class="form-control mb-2">
                <input class="form-check-input" type="checkbox" @bind-value="@drawing.IsChecked" />
                <label class="form-check-label">@drawing.ItemNumber</label>
            </div>
        }
        <AuthorizeView Roles="admin,pm">
            <Authorized Context="jwt">
                @if (designers != null)
                {
                    <div class="input-group mb-2">
                        <span class="input-group-text">制图人</span>
                        <select class="form-select" @bind="@selectedUserId">
                            @foreach (var user in designers)
                            {
                                <option value="@user.Id">@user.UserName</option>
                            }
                        </select>
                    </div>
                }
                <button class="btn btn-primary" type="submit">分配图纸</button>
            </Authorized>
        </AuthorizeView>
    </EditForm>
}
else
{
    <p style="color: red">没有需要分配的图纸</p>
}
<button class="btn btn-secondary mt-2" type="button" @onclick="@(() => NavigationManager.NavigateTo("/drawingplan"))">取消</button>
@code {
    [Parameter]
    public string Id { get; set; }

    bool isDrawingsNotAssigned;
    private DrawingResponse[]? drawingsNotAssigned;
    private Guid selectedUserId;
    private UserResponse[]? designers;

    protected override async Task OnParametersSetAsync()
    {
        drawingsNotAssigned = await Http.GetFromJsonAsync<DrawingResponse[]>($"api/DrawingPlan/DrawingsNotAssigned/{Id}");
        designers = await Http.GetFromJsonAsync<UserResponse[]>("api/UserAdmin/UsersInRoles?roleNames=pm,designer");
        //判断有没有需要分配的图纸
        isDrawingsNotAssigned = await Http.GetFromJsonAsync<bool>($"api/DrawingPlan/IsDrawingsNotAssigned/{Id}");
    }

    async Task Save()
    {
        if (selectedUserId.Equals(Guid.Empty))
        {
            await JsRuntime.InvokeVoidAsync("alert", "请选择制图人");
            return;
        }
        //将勾选的Item图纸，分配给选中的designer（过滤未选中的Item）
        var selectedDrawings = drawingsNotAssigned.Where(x => x.IsChecked).Select(x => x.Id);
        if (!selectedDrawings.Any())
        {
            await JsRuntime.InvokeVoidAsync("alert", "请选择Item图纸");
            return;
        }
        AssignDrawingsToUserRequest request = new AssignDrawingsToUserRequest { DrawingIds = selectedDrawings, UserId = selectedUserId };

        var result = await Http.PutAsJsonAsync("api/DrawingPlan/AssignDrawingsToUser", request);

        drawingsNotAssigned = await Http.GetFromJsonAsync<DrawingResponse[]>($"api/DrawingPlan/DrawingsNotAssigned/{Id}");
        NavigationManager.NavigateTo("/drawingplan");
        //StateHasChanged();
        //todo:如何更新子组件界面数据?
    }
}

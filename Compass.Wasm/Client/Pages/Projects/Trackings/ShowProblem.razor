@using Compass.Wasm.Shared.Categories
@using Compass.Wasm.Shared.Identities
@using Compass.Wasm.Shared.Projects
@inject HttpClient Http
@if (type != null)
{
    <div class="row">
        <div class="col-sm-3" style="width: 61px">异常:</div>
        <div class="col-sm-9" style="color: red">
            <span>@($"{type.Name}({type.Stakeholder})")：@Problem.Description</span>
        </div>
    </div>
    if (responder != null)
    {
        <div class="row">
            <div class="col-sm-3" style="width: 61px">负责:</div>
            <div class="col-sm-9" >
                <span>@responder.UserName</span>
                @*<span>( @Problem.Deadline!.Value.ToString("yyyy/MM/dd") )</span>*@
            </div>
        </div>
    }
    @if (!string.IsNullOrWhiteSpace(Problem.Solution))
    {
        <div class="row">
            <div class="col-sm-3" style="width: 61px">方案:</div>
            <div class="col-sm-9" style="color: green">
                <span >@Problem.Solution</span>
            </div>
        </div>
        
    }
}
@code {
    [Parameter]
    public ProblemDto Problem { get; set; }
    private ProblemTypeResponse? type;
    private UserDto? responder;
    protected override async Task OnParametersSetAsync()
    {
        type = await Http.GetFromJsonAsync<ProblemTypeResponse>($"api/ProblemType/{Problem.ProblemTypeId}");
        if (Problem.ResponseUserId != null && !Problem.ResponseUserId.Equals(Guid.Empty))
        {
            responder = await Http.GetFromJsonAsync<UserDto>($"api/UserAdmin/{Problem.ResponseUserId}");
        }
        else
        {
            responder = null;
        }
    }
}

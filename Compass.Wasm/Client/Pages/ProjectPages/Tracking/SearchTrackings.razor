@inject NavigationManager NavigationManager
@inject HttpClient Http
<div class="input-group my-1">
    <input class="form-control"
           style="max-width: 320px; "
           placeholder="Search..."
           @bind-value="_searchText"
           @bind-value:event="oninput"
           type="search"
           list="products"
           @onkeyup="HandleSearch"
           @ref="SearchInput" />
    <datalist id="products">
        @foreach (var suggestion in _suggestions)
        {
            <option>@suggestion</option>
        }
    </datalist>
    <button class="btn btn-outline-secondary" type="button" @onclick="SearchProducts"><span class="oi oi-magnifying-glass"></span></button>
</div>
@code {
    private string _searchText = string.Empty;
    private List<string>? _suggestions = new();
    protected ElementReference SearchInput;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender) await SearchInput.FocusAsync();
    }

    public void SearchProducts()
    {
        if (_searchText.Length > 0)
        {
            NavigationManager.NavigateTo($"search/{_searchText}/1");
        }
        else
        {
            NavigationManager.NavigateTo("1");
        }
    }
    public async Task HandleSearch(KeyboardEventArgs args)
    {
        if (args.Key == null || args.Key.Equals("Enter"))
        {
            SearchProducts();
        }
        else if (_searchText.Length>1)
        {
            _suggestions = await Http.GetFromJsonAsync<List<string>>($"api/Tracking/searchsuggestions/{_searchText}");
        }
    }
}

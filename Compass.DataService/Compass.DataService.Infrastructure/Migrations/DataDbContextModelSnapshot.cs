// <auto-generated />
using System;
using Compass.DataService.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Compass.DataService.Infrastructure.Migrations
{
    [DbContext(typeof(DataDbContext))]
    partial class DataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Compass.DataService.Domain.Entities.ModuleData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<Guid>("ModuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("Compass.DataService.Domain.Entities.KvfData", b =>
                {
                    b.HasBaseType("Compass.DataService.Domain.Entities.ModuleData");

                    b.Property<bool>("Ansul")
                        .HasColumnType("bit");

                    b.Property<int>("AnsulDetector")
                        .HasColumnType("int");

                    b.Property<int>("AnsulDrop")
                        .HasColumnType("int");

                    b.Property<int>("AnsulSide")
                        .HasColumnType("int");

                    b.Property<bool>("BackCj")
                        .HasColumnType("bit");

                    b.Property<bool>("BackToBack")
                        .HasColumnType("bit");

                    b.Property<bool>("CoverBoard")
                        .HasColumnType("bit");

                    b.Property<int>("DrainType")
                        .HasColumnType("int");

                    b.Property<double>("ExhaustSpigotHeight")
                        .HasColumnType("float");

                    b.Property<double>("ExhaustSpigotLength")
                        .HasColumnType("float");

                    b.Property<int>("ExhaustSpigotNumber")
                        .HasColumnType("int");

                    b.Property<double>("ExhaustSpigotWidth")
                        .HasColumnType("float");

                    b.Property<bool>("LedLogo")
                        .HasColumnType("bit");

                    b.Property<int>("LightType")
                        .HasColumnType("int");

                    b.Property<bool>("Marvel")
                        .HasColumnType("bit");

                    b.Property<double>("MiddleToRight")
                        .HasColumnType("float");

                    b.Property<int>("SidePanel")
                        .HasColumnType("int");

                    b.Property<double>("SpotLightDistance")
                        .HasColumnType("float");

                    b.Property<int>("SpotLightNumber")
                        .HasColumnType("int");

                    b.Property<double>("SupplySpigotDistance")
                        .HasColumnType("float");

                    b.Property<double>("SupplySpigotNumber")
                        .HasColumnType("float");

                    b.Property<bool>("WaterCollection")
                        .HasColumnType("bit");

                    b.ToTable("KvfData", (string)null);
                });

            modelBuilder.Entity("Compass.DataService.Domain.Entities.UviData", b =>
                {
                    b.HasBaseType("Compass.DataService.Domain.Entities.ModuleData");

                    b.Property<bool>("Ansul")
                        .HasColumnType("bit");

                    b.Property<int>("AnsulDetector")
                        .HasColumnType("int");

                    b.Property<int>("AnsulDrop")
                        .HasColumnType("int");

                    b.Property<int>("AnsulSide")
                        .HasColumnType("int");

                    b.Property<bool>("BackCj")
                        .HasColumnType("bit");

                    b.Property<bool>("BackToBack")
                        .HasColumnType("bit");

                    b.Property<bool>("Bluetooth")
                        .HasColumnType("bit");

                    b.Property<bool>("CoverBoard")
                        .HasColumnType("bit");

                    b.Property<int>("DrainType")
                        .HasColumnType("int");

                    b.Property<double>("ExhaustSpigotHeight")
                        .HasColumnType("float");

                    b.Property<double>("ExhaustSpigotLength")
                        .HasColumnType("float");

                    b.Property<int>("ExhaustSpigotNumber")
                        .HasColumnType("int");

                    b.Property<double>("ExhaustSpigotWidth")
                        .HasColumnType("float");

                    b.Property<bool>("LedLogo")
                        .HasColumnType("bit");

                    b.Property<int>("LightType")
                        .HasColumnType("int");

                    b.Property<bool>("Marvel")
                        .HasColumnType("bit");

                    b.Property<double>("MiddleToRight")
                        .HasColumnType("float");

                    b.Property<int>("SidePanel")
                        .HasColumnType("int");

                    b.Property<double>("SpotLightDistance")
                        .HasColumnType("float");

                    b.Property<int>("SpotLightNumber")
                        .HasColumnType("int");

                    b.Property<int>("UvLightType")
                        .HasColumnType("int");

                    b.Property<bool>("WaterCollection")
                        .HasColumnType("bit");

                    b.ToTable("UviData", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
